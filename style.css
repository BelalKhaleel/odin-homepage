*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --primary-color: rgb(255, 255, 255);
  --secondary-color: rgb(8, 145, 178);
}

/* body {
  min-height: 100vh;
} */

header {
  position: relative;
  height: 410px;
  margin-bottom: 15em;
}

.background-decoration {
  height: 100%;
  background-color: var(--secondary-color);
  clip-path: polygon(0 0, 100% 0%, 100% 40%, 0 100%);
  z-index: 0;
}

.background-image {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
  background-image: url(./assets/pexels-olly-3777564.jpg);
  background-size: cover;
  background-position: center;
  display: flex;
  align-items: flex-end;
  padding: 11em 8em;
}

h1 {
  position: absolute;
  top: 70%;
  left: 10%;
  color: white;
  font-size: 3rem;
}

.about-me {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: calc(1em + 3vw);
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 auto;
  padding: 1em;
}

.about-me, .my-work {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  margin-bottom: 4em;
}

.my-work-title {
  text-align: center;
}

.about-me-title,
.my-work-title,
.contact-me-title {
  font-size: 1.5rem;
  font-weight: bold;
}

.cards-container {
  display: grid;
  gap: 3em;
}

.project-card {
  max-width: 300px;
  padding-bottom: 3em;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
}

.project-screenshot > img {
  max-width: 290px;
  height: auto;
}

.project-name-and-links {
  display: flex;
  justify-content: space-between;
  margin-top: 5px;
}

.project-name {
  display: inline-block;
  margin-left: 1em;
}

.project-links {
  margin-right: 0.8em;
}

.project-description {
  padding: 10px;
}

i {
  display: inline-block;
  width: 1.5em;
}

svg {
  width: 1em;
}

footer {
    background-color: var(--secondary-color);
}

.contact-me {
  background-color: var(--secondary-color);
  color: var(--primary-color);
  padding: 1em;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  padding-bottom: 3em;
}

.footer-text {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 20px;
  margin-bottom: 15px;
}

.phone-and-email {
  align-self: flex-start;
}

.phone-and-email svg {
  fill: var(--primary-color);
}

footer i {
  font-size: 1.5em;
}

.footer-image {
  background-image: url(./assets/pexels-olly-3778680.jpg);
  padding: 9em;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

@media (min-width: 767px) {
  main {
    max-width: 650px;
  }

  .about-me {
    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
  }

  .my-work-title {
    align-self: flex-start;
  }
  
  .my-work {
    margin-bottom: 10em;
  }

  .cards-container {
    grid-template-columns: 1fr 1fr;
  }

  footer {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
  }

  .footer-image {
    background-image: url(./assets/pexels-olly-3778680.jpg);
    padding: 13em;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
  }

  .contact-me {
    align-items: flex-start;
  }
}

@media (min-width: 1200px) {
  header {
    margin-bottom: 10em;
  }

  .content {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: -22em;
    position: relative;
    z-index: 1;
  }

  .background-image {
    position: relative;
    transform: translate(0, 0);
    top: 0;
    left: 0;
    background-size: cover;
    background-position: center;
    padding: 12em 3em;
  }

  h1 {
    color: white;
    font-size: 3rem;
    position: relative;
    top: 170px;
    left: 0;
  }

  .about-me {
    max-width: 500px;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
    background-color: var(--primary-color);
    align-items: flex-start;
    gap: 2em;
    margin-bottom: 0;
  }

  .cards-container {
    grid-template-columns: repeat(3, 1fr);
  }
}